@model BookApp.Models.User

@{
    ViewBag.Title = "Create";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">




    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link href="~/Content/Book/Style.css" rel="stylesheet" />
    <title></title>


</head>
    @using (Html.BeginForm("Registration", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <body>

            <div class="container register-form">
                <div class="form">
                    <div class="note">
                        <p>User Registration</p>
                    </div>

                    <div class="form-content">

                        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
                        {
                            if (ViewBag.Message != null)
                            {
                                <div class="alert alert-success">
                                    <strong>Success!</strong>@ViewBag.Message
                                </div>
                            }
                        }
                        else
                        {
                            <div class="row">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.FirstName) } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.Email) } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.LastName) } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.ID_Number, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.ID_Number) } })
                                        @Html.ValidationMessageFor(model => model.ID_Number, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.Address) } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.Phone) } })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.DropDownList("GenderId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        @Html.DropDownList("InstitutionId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.Password) } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group">
                                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(m => m.ConfirmPassword) } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <br />
                            <button type="submit" class="btnSubmit">Submit</button>


                            if (ViewBag.Message != null)
                            {
                                <div class="alert alert-danger">
                                    <strong>Error!</strong>@ViewBag.Message
                                </div>
                            }

                        }



                    </div>
                </div>
            </div>


        </body>
    }
</html>